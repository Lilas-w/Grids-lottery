{"version":3,"sources":["components/Item.js","components/Button.js","components/List.js","App.js","index.js"],"names":["Item","num","prize","active","className","name","Button","handleLottery","onClick","List","list","map","item","index","App","useState","prizePool","setPrizePool","stone","setStone","lotteryList","setLotteryList","setActive","loaded","setLoaded","isLottery","setIsLottery","useEffect","axios","get","then","res","data","alert","accProb","p","prob","reduce","pre","cur","i","lotteryIndex","Math","random","length","move","circleRun","setInterval","clearInterval","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4c09473.chunk.js","sourcesContent":["import React from 'react';\nimport '../index.css';\n\nconst Item = ({ num, prize, active }) => {\n\treturn (\n\t\t<div className={num === active ? 'item itemActivate' : 'item'}>\n\t\t\t{prize.name}\n\t\t</div>\n\t)\n}\n\nexport default Item\n","import React from 'react'\n\nconst Button = ({ handleLottery }) => {\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={handleLottery} className=\"lottery-btn\">\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default Button\n","import React from 'react'\n\nconst List = ({ list }) => {\n\treturn (\n\t\t<div>\n\t\t\t{list.map((item, index) => { return <li key={index}>{item.name}</li> })}\n\t\t</div>\n\t)\n}\n\nexport default List\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Item from './components/Item';\nimport Button from './components/Button';\nimport List from './components/List'\nimport './App.css';\n\n\n\nconst baseUrl = 'http://localhost:3002/prizePool';\n\n\nconst App = () => {\n\n  const [prizePool, setPrizePool] = useState([]);\n  const [stone, setStone] = useState(750);\n  const [lotteryList, setLotteryList] = useState([]);\n  const [active, setActive] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n  const [isLottery, setIsLottery] = useState(false);\n\n  const hook = () => axios.get(baseUrl)\n    .then(res => {\n      setPrizePool(res.data);\n      setLoaded(true)\n    })\n\n  useEffect(hook, []);\n\n\n\n\n  const handleLottery = () => {\n    if (isLottery) {\n      return;\n    }\n    setIsLottery(true);\n    if (stone < 200) {\n      alert('矿石不足');\n      return;\n    }\n    //抽奖过程\n    setStone(stone - 200);\n    const accProb = []\n    prizePool.map(p => p.prob).reduce((pre, cur, i) => accProb[i] = pre + cur, 0)\n    let lotteryIndex = Math.random();\n    for (let i = 0; i < accProb.length; i++) {\n      if (lotteryIndex <= accProb[i]) {\n        lotteryIndex = i + 1;\n        break;\n      }\n    }\n    const move = lotteryIndex - 1 + 9 * 2;\n    // console.log('lo', lotteryIndex)\n    let i = 1;\n    let circleRun = setInterval(() => {\n      if (i <= move) {\n        setActive((i + 1) % 9);\n        i++;\n      } else {\n        clearInterval(circleRun);\n        setLotteryList([...lotteryList, prizePool[lotteryIndex - 1]]);\n        setIsLottery(false);\n        if (lotteryIndex === 1) {\n          setStone(stone + 66);\n        }\n      }\n    }, 150)\n\n\n  }\n  return (\n    <div className=\"App\">\n      <div className='bg'>\n        {loaded ?\n          <div className=\"board\">\n            <div className='boardContainer'>\n              <div className='row'>\n                <div><Item num={1} prize={prizePool[0]} active={active} /></div>\n                <div><Item num={2} prize={prizePool[1]} active={active} /></div>\n                <div><Item num={3} prize={prizePool[2]} active={active} /></div>\n              </div>\n              <div className='row'>\n                <div><Item num={8} prize={prizePool[7]} active={active} /></div>\n                <div>\n                  <Button handleLottery={handleLottery} />\n                </div>\n                <div><Item num={4} prize={prizePool[3]} active={active} /></div>\n              </div>\n              <div className='row'>\n                <div><Item num={7} prize={prizePool[6]} active={active} /></div>\n                <div><Item num={6} prize={prizePool[5]} active={active} /></div>\n                <div><Item num={5} prize={prizePool[4]} active={active} /></div>\n              </div>\n            </div>\n            <div className='remind-text'>\n              当前矿石数：{stone}\n              <div>200矿石/次</div>\n            </div>\n          </div>\n          : <div className=\"loading\">加载数据...</div>}\n      </div>\n\n\n      <div className='lottery-list'>\n        <div className=\"list-head\">获奖记录</div>\n        <ul>\n          <List list={lotteryList} />\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}